{"version":3,"file":"static/js/0.8e65c14c.chunk.js","mappings":"kJAIMA,EAAW,SAAC,GAOX,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,SACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,MAEA,EAQIL,EAPFM,IAAAA,OADF,MACQ,GADR,IAQIN,EANFO,MAAAA,OAFF,MAEU,GAFV,IAQIP,EALFQ,QAAAA,OAHF,MAGY,EAHZ,IAQIR,EAJFS,UAAAA,OAJF,MAIcC,iHAJd,IAQIV,EAHFW,MALF,IAKWC,MAAAA,OALX,MAKmB,EALnB,MAKsBC,aAAAA,OALtB,MAKqC,EALrC,MAKwCC,KAAAA,OALxC,MAK+C,SAL/C,IAQId,EAFFe,QAAAA,OANF,MAMY,EANZ,EAOEC,EACEhB,EADFgB,IA0BF,OACE,iBAAKC,UAAU,YAAf,WACE,gBAAKC,IAAKT,EAAWU,IAAKZ,KAE1B,iBAAKU,UAAU,OAAf,WACE,SAAC,KAAD,CAAMG,GAAE,mBAAcd,EAAd,qBAA8BU,EAA9B,oBAA6CD,GAArD,UACE,iBAAME,UAAU,QAAhB,SAAyBV,OAE3B,iBAAMU,UAAU,OAAhB,SAAwBH,KACxB,iBAAKG,UAAU,QAAf,WACE,iBAAMA,UAAU,QAAhB,SACG,IAAII,KAAKC,aAAa,KAAM,CAC3BC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IACtBC,OAAOd,EAAQR,MAGpB,yBAAMS,EAAeT,QAGvB,iBACEa,UAAU,SACVU,QAAS,kBAAMzB,EAAQF,IACvB4B,KAAM,SAHR,8BAOA,iBAAMX,UAAU,SAASU,QAhCZ,WACjB1B,GAAS4B,EAAAA,EAAAA,IAAevB,EAAKS,KA+BqBa,KAAM,SAApD,wBAKF,iBAAKX,UAAU,UAAf,WACE,mBAAQU,QAzDS,WACjBvB,EAAQI,EACVL,EAAYC,EAAQ,EAAGC,GAEvBJ,GACE6B,EAAAA,EAAAA,IAAS,CACPC,QAAQ,QAAD,OAAUvB,EAAV,sDACPwB,MAAO,aAkDT,eACC5B,GACD,mBAAQuB,QA9CS,WACjBvB,EAAQ,EACVD,EAAYC,EAAQ,EAAGC,GAClBJ,GAAS4B,EAAAA,EAAAA,IAAevB,EAAKS,KA2ChC,sBAMR,WAAekB,EAAAA,EAAAA,MAAKlC","sources":["view/components/CartItem.jsx"],"sourcesContent":["import { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addToast, removeFromCart } from \"../services/actions\";\r\n\r\nconst CartItem = ({\r\n  product,\r\n  dispatch,\r\n  handler,\r\n  updateCount,\r\n  count,\r\n  index,\r\n}) => {\r\n  const {\r\n    _id = \"\",\r\n    title = \"\",\r\n    allowed = 1,\r\n    thumbnail = process.env.REACT_APP_PLACEHOLDER_IMAGE,\r\n    sizes: { price = 0, retail_price = 0, size = \"Normal\" },\r\n    variant = 0,\r\n    uci,\r\n  } = product;\r\n\r\n  const incrementCount = () => {\r\n    if (count < allowed) {\r\n      updateCount(count + 1, index);\r\n    } else {\r\n      dispatch(\r\n        addToast({\r\n          message: `Only ${allowed} items per purchase are available for this product`,\r\n          color: \"danger\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const decrementCount = () => {\r\n    if (count > 1) {\r\n      updateCount(count - 1, index);\r\n    } else dispatch(removeFromCart(_id, variant));\r\n  };\r\n\r\n  const removeItem = () => {\r\n    dispatch(removeFromCart(_id, variant));\r\n  };\r\n\r\n  return (\r\n    <div className=\"list_item\">\r\n      <img src={thumbnail} alt={title} />\r\n\r\n      <div className=\"info\">\r\n        <Link to={`/product/${_id}?category=${uci}&variant=${variant}`}>\r\n          <span className=\"title\">{title}</span>\r\n        </Link>\r\n        <span className=\"size\">{size}</span>\r\n        <div className=\"price\">\r\n          <span className=\"offer\">\r\n            {new Intl.NumberFormat(\"en\", {\r\n              style: \"currency\",\r\n              currency: \"INR\",\r\n              maximumFractionDigits: 2,\r\n            }).format(price * count)}\r\n          </span>\r\n\r\n          <del>{retail_price * count}</del>\r\n        </div>\r\n\r\n        <span\r\n          className=\"add_to\"\r\n          onClick={() => handler(product)}\r\n          role={\"button\"}\r\n        >\r\n          Add to Wishlist\r\n        </span>\r\n        <span className=\"remove\" onClick={removeItem} role={\"button\"}>\r\n          Remove\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"counter\">\r\n        <button onClick={incrementCount}>+</button>\r\n        {count}\r\n        <button onClick={decrementCount}>-</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(CartItem);\r\n"],"names":["CartItem","product","dispatch","handler","updateCount","count","index","_id","title","allowed","thumbnail","process","sizes","price","retail_price","size","variant","uci","className","src","alt","to","Intl","NumberFormat","style","currency","maximumFractionDigits","format","onClick","role","removeFromCart","addToast","message","color","memo"],"sourceRoot":""}