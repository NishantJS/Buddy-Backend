{"version":3,"file":"static/js/218.0555a59d.chunk.js","mappings":"wKAyCMA,EAAS,CACb,CACEC,KAAM,QACNC,KAAM,OACNC,OAAQ,mCACRC,SAAU,4CAEZ,CACEH,KAAM,OACNC,KAAM,OACNC,OAAQ,oCAEV,CACEF,KAAM,YACNC,KAAM,OACNC,OAAQ,oCAEV,CACEF,KAAM,aACNC,KAAM,OACNC,OAAQ,oCAEV,CACEF,KAAM,MACNC,KAAM,OACNC,OAAQ,qC,SCNZ,EAxDmB,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACpB,GAIIC,EAAAA,EAAAA,MAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAITE,EAAc,SAACC,GACnB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,CAACH,EAAKI,OAAOf,MAAOW,EAAKI,OAAOC,MAAM,IAEtDC,MAAM,UAAD,OAAWb,EAAX,MAAyB,CAC5Bc,OAAQ,OACRC,KAAMP,IAELQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACT,GACLY,QAAQC,IAAIb,MAEbc,OAAM,SAACC,GACNH,QAAQG,MAAMA,OAGpB,OACE,kBAAMC,SAAUpB,GAlBD,SAACI,GAAD,OAAUY,QAAQC,IAAIb,MAkBrC,UAYGZ,EAAAA,KAAW,YAA+C,IAAD,EAA3CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,OAA+B,IAAvBC,SAAAA,OAAuB,SACxD,OACE,4BACE,2BAAQH,KACR,kCACEC,KAAMA,EACNC,OAAQA,GACJI,EAASN,EAAM,CAAEG,SAAAA,KAHvB,IAIEyB,SAAUlB,KANd,UAQGF,EAAOR,UARV,aAQG,EAAc6B,UARP7B,OAYd,kBAAOC,KAAK","sources":["data/addProduct.seller.js","view/components/AddProduct.jsx"],"sourcesContent":["export const general = [\r\n  {\r\n    name: \"title\",\r\n    type: \"text\",\r\n    minLength: { value: 3, message: \"Product length should be more than 3\" },\r\n    maxLength: {\r\n      value: 100,\r\n      message: \"Product length should not be more than 90\",\r\n    },\r\n    required: \"Please provide product name\",\r\n  },\r\n  {\r\n    name: \"allowed\",\r\n    type: \"number\",\r\n    min: {\r\n      value: 1,\r\n      message: \"Customer should be able to order at least 1 item\",\r\n    },\r\n    max: {\r\n      value: 10,\r\n      message: \"Customer should be able to order in bulk, i.e. more than 10\",\r\n    },\r\n    required: \"Please provide allowed quantity for every transaction\",\r\n  },\r\n  {\r\n    name: \"stock\",\r\n    type: \"number\",\r\n    min: {\r\n      value: 1,\r\n      message: \"Your stock should be greater than 1 to be listed\",\r\n    },\r\n    max: {\r\n      value: 99999,\r\n      message: \"Please provide a valid stock value from 1 to 99,999\",\r\n    },\r\n    required: \"Please provide total stock for the product\",\r\n  },\r\n];\r\n\r\nexport default general;\r\n\r\nconst images = [\r\n  {\r\n    name: \"front\",\r\n    type: \"file\",\r\n    accept: \"image/png, image/gif, image/jpeg\",\r\n    required: \"Please provide front side of the product\",\r\n  },\r\n  {\r\n    name: \"back\",\r\n    type: \"file\",\r\n    accept: \"image/png, image/gif, image/jpeg\",\r\n  },\r\n  {\r\n    name: \"side-left\",\r\n    type: \"file\",\r\n    accept: \"image/png, image/gif, image/jpeg\",\r\n  },\r\n  {\r\n    name: \"side-right\",\r\n    type: \"file\",\r\n    accept: \"image/png, image/gif, image/jpeg\",\r\n  },\r\n  {\r\n    name: \"top\",\r\n    type: \"file\",\r\n    accept: \"image/png, image/gif, image/jpeg\",\r\n  },\r\n];\r\nexport { images };\r\n\r\n","import { useForm } from \"react-hook-form\";\r\nimport { images } from \"../../data/addProduct.seller.js\";\r\n// import \"../../styles/stepper.scss\";\r\n\r\nconst AddProduct = ({ sellerId }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => console.log(data);\r\n  const uploadImage = (data) => {\r\n    const formData = new FormData();\r\n    formData.append([data.target.name], data.target.files[0]);\r\n\r\n    fetch(`upload/${sellerId}/d`, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {/* {general.map((element) => {\r\n        let { name, type } = element;\r\n        return (\r\n          <div key={name}>\r\n            <label>{name}</label>\r\n            <input type={type} {...register(name, element)} />\r\n            {errors[name]?.message}\r\n          </div>\r\n        );\r\n      })} */}\r\n\r\n      {images.map(({ name, type, accept, required = false }) => {\r\n        return (\r\n          <div key={name}>\r\n            <label>{name}</label>\r\n            <input\r\n              type={type}\r\n              accept={accept}\r\n              {...register(name, { required })}\r\n              onChange={uploadImage}\r\n            />\r\n            {errors[name]?.message}\r\n          </div>\r\n        );\r\n      })}\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n\r\n// const Input = ({label, type, }) => {\r\n\r\n// }\r\n"],"names":["images","name","type","accept","required","sellerId","useForm","register","handleSubmit","errors","formState","uploadImage","data","formData","FormData","append","target","files","fetch","method","body","then","response","json","console","log","catch","error","onSubmit","onChange","message"],"sourceRoot":""}