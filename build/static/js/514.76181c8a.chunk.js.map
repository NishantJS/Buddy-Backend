{"version":3,"file":"static/js/514.76181c8a.chunk.js","mappings":"yMAGe,SAASA,IAAqB,IAAZC,EAAW,uDAAJ,GACtC,GAAkCC,EAAAA,EAAAA,UAAS,CACzCC,OAAQ,IACRC,KAAM,KACNC,SAAS,EACTC,OAAO,IAJT,eAAOC,EAAP,KAAkBC,EAAlB,KAyCA,OAlCAC,EAAAA,EAAAA,YAAU,WACR,MAA0BC,EAAAA,YAAAA,SAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAETC,EAAU,CACdC,YAAaH,EACbI,eAAgB,kBAAM,IAGlBC,EAAS,mCAAG,gGAASf,EAAT,EAASA,KAAMY,EAAf,EAAeA,QAAf,mBAEKI,EAAAA,EAAAA,KAAI,IAAD,OAAKhB,GAAQY,GAFrB,OAERT,EAFQ,OAGdI,EAAa,CACXL,OAAQC,EAAKD,OACbC,KAAMA,EAAKA,KACXC,SAAS,EACTC,MAAOF,EAAKA,KAAKE,QAPL,gDAUdE,EAAa,CACXL,OAAQ,IACRG,OAAO,EACPD,SAAS,EACTD,KAAI,OAAC,EAAD,yBAAE,KAAKc,UAdC,yDAAH,sDAqBf,OAFAF,EAAU,CAAEf,KAAAA,EAAMY,QAAAA,IAEX,WACLD,OAED,CAACX,IAEGM,I,wHCDT,UAnCiB,WACf,OAAiCP,EAAAA,EAAAA,GAAS,WAAlCI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MACjBa,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,WA4B7C,OA1BAd,EAAAA,EAAAA,YAAU,WAuBR,OAtBKJ,GAAYC,GAAUF,EAAKE,MAkBzB,OAAIF,QAAJ,IAAIA,GAAAA,EAAME,QACfe,EAAS,KACTF,GAASO,EAAAA,EAAAA,IAAW,CAAER,QAAO,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAMA,SAnBrC,OAAIA,QAAJ,IAAIA,GAAAA,EAAMuB,MACRC,aAAaC,WAAW,UACxBD,aAAaE,QAAQ,OAAQC,KAAKC,UAAL,OAAe5B,QAAf,IAAeA,OAAf,EAAeA,EAAMuB,OAElDR,GAASc,EAAAA,EAAAA,IAAO,OAAC7B,QAAD,IAACA,OAAD,EAACA,EAAMuB,QAEZ,OAAPJ,QAAO,IAAPA,OAAA,EAAAA,EAASW,QAAS,GAAGf,GAASgB,EAAAA,EAAAA,MAElCd,EAAS,MACJ,OAAIjB,QAAJ,IAAIA,GAAAA,EAAMgC,QACfR,aAAaC,WAAW,QACxBD,aAAaE,QAAQ,SAAUC,KAAKC,UAAL,OAAe5B,QAAf,IAAeA,OAAf,EAAeA,EAAMgC,SAEpDjB,GAASkB,EAAAA,EAAAA,GAAS,OAACjC,QAAD,IAACA,OAAD,EAACA,EAAMgC,SAEzBf,EAAS,eACJA,EAAS,KAKX,eACN,CAACjB,EAAMe,EAAUb,EAAOD,EAASgB,EAAUE,KAEvC","sources":["hooks/useFetch.js","view/pages/Redirect.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { CancelToken, get } from \"axios\";\r\n\r\nexport default function useFetch(path = \"\") {\r\n  const [fetchData, setFetchData] = useState({\r\n    status: 102,\r\n    data: null,\r\n    loading: true,\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { token, cancel } = CancelToken.source();\r\n\r\n    const options = {\r\n      cancelToken: token,\r\n      validateStatus: () => true,\r\n    };\r\n\r\n    const fetchPath = async ({ path, options }) => {\r\n      try {\r\n        const data = await get(`/${path}`, options);\r\n        setFetchData({\r\n          status: data.status,\r\n          data: data.data,\r\n          loading: false,\r\n          error: data.data.error,\r\n        });\r\n      } catch (err) {\r\n        setFetchData({\r\n          status: 500,\r\n          error: true,\r\n          loading: false,\r\n          data: err?.message,\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchPath({ path, options });\r\n\r\n    return () => {\r\n      cancel();\r\n    };\r\n  }, [path]);\r\n\r\n  return fetchData;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser } from \"../services/actions/user.js\";\r\nimport { addSeller } from \"../services/actions/seller.js\";\r\nimport { logoutUser } from \"../services/actions/auth.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchProduct } from \"../services/actions/product.js\";\r\n\r\nconst Redirect = () => {\r\n  const { data, loading, error } = useFetch(\"session\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const product = useSelector((state) => state.product);\r\n\r\n  useEffect(() => {\r\n    if (!loading && !error && !data.error) {\r\n      if (data?.user) {\r\n        localStorage.removeItem(\"seller\");\r\n        localStorage.setItem(\"user\", JSON.stringify(data?.user));\r\n\r\n        dispatch(addUser(data?.user));\r\n\r\n        if (product?.length < 1) dispatch(fetchProduct());\r\n\r\n        navigate(\"/\");\r\n      } else if (data?.seller) {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.setItem(\"seller\", JSON.stringify(data?.seller));\r\n\r\n        dispatch(addSeller(data?.seller));\r\n\r\n        navigate(\"/dashboard\");\r\n      } else navigate(\"/\");\r\n    } else if (data?.error) {\r\n      navigate(\"/\");\r\n      dispatch(logoutUser({ message: data?.data }));\r\n    }\r\n    return () => {};\r\n  }, [data, dispatch, error, loading, navigate, product]);\r\n\r\n  return <section>Redirecting...</section>;\r\n};\r\n\r\nexport default Redirect;\r\n"],"names":["useFetch","path","useState","status","data","loading","error","fetchData","setFetchData","useEffect","CancelToken","token","cancel","options","cancelToken","validateStatus","fetchPath","get","message","dispatch","useDispatch","navigate","useNavigate","product","useSelector","state","logoutUser","user","localStorage","removeItem","setItem","JSON","stringify","addUser","length","fetchProduct","seller","addSeller"],"sourceRoot":""}