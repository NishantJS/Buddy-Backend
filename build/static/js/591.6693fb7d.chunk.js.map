{"version":3,"file":"static/js/591.6693fb7d.chunk.js","mappings":"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","sources":["data/addAddress.js","view/components/AddressList.jsx","view/components/AddAddress.jsx","view/pages/Profile.jsx"],"sourcesContent":["export const general = [\r\n  {\r\n    name: \"full_name\",\r\n    type: \"text\",\r\n    options: {\r\n      minLength: {\r\n        value: 3,\r\n        message: \"full name length should be more than 3\",\r\n      },\r\n      maxLength: {\r\n        value: 30,\r\n        message: \"full name length should not be more than 30\",\r\n      },\r\n      required: \"Please provide your full name\",\r\n      pattern: {\r\n        value: /^[a-zA-z]+([\\s][a-zA-Z]+)+$/,\r\n        message: \"Invalid Input\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"line1\",\r\n    type: \"text\",\r\n    options: {\r\n      minLength: { value: 3, message: \"line1 length should be more than 3\" },\r\n      maxLength: {\r\n        value: 30,\r\n        message: \"line1 length should not be more than 30\",\r\n      },\r\n      required: \"Please provide your room no, building name\",\r\n      pattern: {\r\n        value: /^[a-zA-z0-9]+([\\s][a-zA-Z0-9]+)+$/,\r\n        message: \"Invalid Input\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"line2\",\r\n    type: \"text\",\r\n    options: {\r\n      minLength: { value: 3, message: \"line2 length should be more than 3\" },\r\n      maxLength: {\r\n        value: 30,\r\n        message: \"line2 length should not be more than 30\",\r\n      },\r\n      required: \"Please provide your room no, building name\",\r\n      pattern: {\r\n        value: /^[a-zA-z0-9]+([\\s][a-zA-Z0-9]+)+$/,\r\n        message: \"Invalid Input\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"phone\",\r\n    type: \"number\",\r\n    options: {\r\n      required: \"Please provide your primary mobile number\",\r\n      pattern: {\r\n        value: /[6-9]{1}[0-9]{9}$/,\r\n        message:\r\n          \"Only provide 10 digit mobile number without country code and no special characters.\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"pin\",\r\n    type: \"number\",\r\n    options: {\r\n      required: \"Please provide your pin-code\",\r\n      pattern: {\r\n        value: /[1-9]{1}[0-9]{5}$/,\r\n        message: \"Only provide 6 digit pincode without special characters.\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"city\",\r\n    type: \"text\",\r\n    options: {\r\n      minLength: { value: 3, message: \"city length should be more than 3\" },\r\n      maxLength: {\r\n        value: 20,\r\n        message: \"city length should not be more than 20\",\r\n      },\r\n      required: \"Please provide your city or district name\",\r\n    },\r\n    disabled: true,\r\n  },\r\n  {\r\n    name: \"state\",\r\n    type: \"text\",\r\n    options: {\r\n      minLength: { value: 3, message: \"state length should be more than 3\" },\r\n      maxLength: {\r\n        value: 20,\r\n        message: \"state length should not be more than 20\",\r\n      },\r\n      required: \"Please provide your state name\",\r\n    },\r\n    disabled: true,\r\n  },\r\n  {\r\n    name: \"isPrimary\",\r\n    type: \"checkbox\",\r\n    value: \"Default Address\",\r\n  },\r\n];\r\n\r\nexport default general;\r\n","import React from \"react\";\r\nimport { removeFromAddress } from \"../services/actions/auth.js\";\r\n\r\nconst AddressList = ({ data, dispatch, isSeller }) => {\r\n  const removeAddress = (id) => {\r\n    dispatch(removeFromAddress(id, isSeller));\r\n  };\r\n\r\n  return data.address?.map((address) => {\r\n    return (\r\n      <address key={address.full_name + address?.line1}>\r\n        <h3>\r\n          {address?.full_name}{\" \"}\r\n          {address?.isPrimary && (\r\n            <span className=\"primary\">Default address</span>\r\n          )}\r\n        </h3>\r\n        <span>\r\n          {address?.line1}, {address?.line2}\r\n        </span>\r\n        <span>\r\n          {address?.city}, {address?.state}\r\n        </span>\r\n        <span>{address?.pin}</span>\r\n        {address?.phone.join(\", \")}\r\n        <span className=\"delete\" onClick={() => removeAddress(address._id)}>\r\n          &#128473;\r\n        </span>\r\n      </address>\r\n    );\r\n  });\r\n};\r\n\r\nexport default AddressList;\r\n","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport AddressFormData from \"../../data/addAddress.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { addToast } from \"../services/actions/toast.js\";\r\nimport AddressList from \"./AddressList.jsx\";\r\nimport { addAddress } from \"../services/actions/auth.js\";\r\n\r\nconst AddAddress = ({ isSeller }) => {\r\n  const data = useSelector((state) => state.auth[isSeller ? \"seller\" : \"user\"]);\r\n  const [isClicked, setClicked] = useState(() => false);\r\n  const dispatch = useDispatch();\r\n\r\n  const updateClicked = () => {\r\n    if (data?.address?.length > 3) {\r\n      dispatch(\r\n        addToast({\r\n          message:\r\n            \"Address length exceeds! Please delete any one address to add this\",\r\n          color: \"danger\",\r\n        })\r\n      );\r\n      return;\r\n    }\r\n    setClicked((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add_address\" id=\"address\">\r\n      {!isClicked ? (\r\n        <>\r\n          <div className=\"list\">\r\n            <AddressList data={data} dispatch={dispatch} isSeller={isSeller} />\r\n          </div>\r\n          <Button handler={updateClicked} />\r\n        </>\r\n      ) : (\r\n        <AddressForm\r\n          handler={updateClicked}\r\n          dispatch={dispatch}\r\n          isSeller={isSeller}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Button = ({ handler }) => {\r\n  return <button onClick={handler}>Add Address</button>;\r\n};\r\n\r\nconst AddressForm = ({ handler, dispatch, isSeller }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    const response = await axios.post(\r\n      `/${isSeller ? \"seller\" : \"user\"}/address/add`,\r\n      { ...data },\r\n      { validateStatus: () => true }\r\n    );\r\n\r\n    const address = {\r\n      full_name: data.full_name,\r\n      line1: data.line1,\r\n      line2: data.line2,\r\n      state: data.state,\r\n      city: data.city,\r\n      phone: [data.phone],\r\n      pin: data.pin,\r\n      isPrimary: data.isPrimary,\r\n    };\r\n\r\n    if (!response?.data?.error) dispatch(addAddress({ address, isSeller }));\r\n    handler();\r\n  };\r\n\r\n  const fetchCity = async (event) => {\r\n    const clearState = () => {\r\n      setValue(\"city\", \"\");\r\n      setValue(\"state\", \"\");\r\n    };\r\n\r\n    const value = event?.target?.value;\r\n    if (!value || isNaN(parseInt(value))) {\r\n      clearState();\r\n      return;\r\n    }\r\n    const regex = /[1-9]{1}[0-9]{5}$/;\r\n    const pincode = parseInt(value);\r\n    if (!regex.test(value)) {\r\n      clearState();\r\n      return;\r\n    }\r\n\r\n    const { data } = await axios.get(\r\n      `https://api.postalpincode.in/pincode/${pincode}`\r\n    );\r\n\r\n    if (\r\n      data[0].Status === \"Error\" ||\r\n      data[0].PostOffice[0][\"DeliveryStatus\"] !== \"Delivery\"\r\n    ) {\r\n      dispatch(\r\n        addToast({\r\n          message: \"Sorry! Address is not available for deleivery yet!\",\r\n          color: \"danger\",\r\n        })\r\n      );\r\n      clearState();\r\n      return;\r\n    }\r\n\r\n    const postOffice = data[0].PostOffice[0];\r\n\r\n    const block =\r\n      postOffice.Block !== \"NA\" ? postOffice.Block : postOffice.District;\r\n    setValue(\"city\", block);\r\n    setValue(\"state\", postOffice.State);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {AddressFormData?.map(\r\n        ({ name, value = \"\", type, options, disabled = false }) => {\r\n          return (\r\n            <div key={`${name}${value}`}>\r\n              <label>\r\n                {value || name}\r\n                <input\r\n                  name={name}\r\n                  type={type}\r\n                  aria-invalid={errors[name] ? \"true\" : \"false\"}\r\n                  {...register(name, { ...options })}\r\n                  disabled={disabled}\r\n                  onChange={(e) => (name === \"pin\" ? fetchCity(e) : {})}\r\n                />\r\n              </label>\r\n              {errors[name] && (\r\n                <span className=\"error\">{errors[name][\"message\"]}</span>\r\n              )}\r\n            </div>\r\n          );\r\n        }\r\n      )}\r\n      <input\r\n        type=\"submit\"\r\n        // disabled={Object.keys(errors).length === 0 ? false : true}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddAddress;\r\n","import AddAddress from \"../components/AddAddress\";\r\nimport \"../../styles/profile.scss\";\r\n\r\nconst Profile = ({ isSeller }) => {\r\n  return (\r\n    <section className=\"profile\">\r\n      <AddAddress isSeller={isSeller} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["name","type","options","minLength","value","message","maxLength","required","pattern","disabled","data","dispatch","isSeller","address","map","full_name","isPrimary","className","line1","line2","city","state","pin","phone","join","onClick","id","_id","removeFromAddress","Button","handler","AddressForm","useForm","register","handleSubmit","errors","formState","setValue","onSubmit","axios","validateStatus","response","error","addAddress","fetchCity","event","clearState","target","isNaN","parseInt","regex","pincode","test","Status","PostOffice","addToast","color","postOffice","block","Block","District","State","AddressFormData","onChange","e","useSelector","auth","useState","isClicked","setClicked","useDispatch","updateClicked","length","prev"],"sourceRoot":""}