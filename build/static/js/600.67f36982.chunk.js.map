{"version":3,"file":"static/js/600.67f36982.chunk.js","mappings":"yMAGe,SAASA,IAAqB,IAAZC,EAAW,uDAAJ,GACtC,GAAkCC,EAAAA,EAAAA,UAAS,CACzCC,OAAQ,IACRC,KAAM,KACNC,SAAS,EACTC,OAAO,IAJT,eAAOC,EAAP,KAAkBC,EAAlB,KAyCA,OAlCAC,EAAAA,EAAAA,YAAU,WACR,MAA0BC,EAAAA,YAAAA,SAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAETC,EAAU,CACdC,YAAaH,EACbI,eAAgB,kBAAM,IAGlBC,EAAS,mCAAG,gGAASf,EAAT,EAASA,KAAMY,EAAf,EAAeA,QAAf,mBAEKI,EAAAA,EAAAA,KAAI,IAAD,OAAKhB,GAAQY,GAFrB,OAERT,EAFQ,OAGdI,EAAa,CACXL,OAAQC,EAAKD,OACbC,KAAMA,EAAKA,KACXC,SAAS,EACTC,MAAOF,EAAKA,KAAKE,QAPL,gDAUdE,EAAa,CACXL,OAAQ,IACRG,OAAO,EACPD,SAAS,EACTD,KAAI,OAAC,EAAD,yBAAE,KAAKc,UAdC,yDAAH,sDAqBf,OAFAF,EAAU,CAAEf,KAAAA,EAAMY,QAAAA,IAEX,WACLD,OAED,CAACX,IAEGM,I,gICzCHY,EAAQ,WACZ,OAAiCnB,EAAAA,EAAAA,GAAS,gBAAlCI,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAAOD,EAArB,EAAqBA,QAErB,GAA8B,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAMA,OAAQ,GAAhCgB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAETC,GACHhB,GAASc,GACR,iCACE,gCAAaA,KACb,kBAAMG,UAAU,WAAhB,eAA8BF,SAGhC,iCACE,uIAIA,iBAAME,UAAU,WAAhB,+CAIAC,EAAYnB,GAAU,2CAAgBiB,EAE5C,OAAO,gBAAKC,UAAU,UAAf,SAA0BC,KAGnC,GAAeC,EAAAA,EAAAA,MAAKN,GCqBpB,EA9Ca,WAAO,IAAD,QACXO,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,UAAGF,EAASG,gBAAZ,aAAG,EAAmBC,SAAS,UACvCC,EAAM,UAAGL,EAASG,gBAAZ,aAAG,EAAmBC,SAAS,SAE3C,GAA8B5B,EAAAA,EAAAA,YAC5B,UAAAwB,EAASG,gBAAT,UAAmBC,SAAS,WAD9B,eAAOE,EAAP,KAAgBC,EAAhB,KAIMC,GACJ,6DAC2B,iDAIvBC,GACJ,kDACgB,oDAIZC,EAAO,eAAWR,EAAW,WAAa,KAAnC,OACXI,EAAU,WAAa,SAOzB,OACE,oBAAST,UAAU,OAAnB,UACE,iBAAKA,UAAU,YAAf,WACE,iBAAKA,UAAU,SAAf,WACE,SAAC,EAAD,KACA,SAAC,KAAD,CAAQK,SAAUA,EAAUG,OAAQA,QAGtC,SAAC,KAAD,CAAMM,GAAID,EAASE,QAZH,WACpBL,GAAW,SAACM,GAAD,OAAQA,MAW4BhB,UAAU,cAArD,SACW,OAARG,QAAQ,IAARA,GAAA,UAAAA,EAAUG,gBAAV,SAAoBC,SAAS,SAAWK,EAAWD,KAEtD,gBAAKX,UAAU","sources":["hooks/useFetch.js","view/components/auth/Quote.jsx","view/pages/Auth.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { CancelToken, get } from \"axios\";\r\n\r\nexport default function useFetch(path = \"\") {\r\n  const [fetchData, setFetchData] = useState({\r\n    status: 102,\r\n    data: null,\r\n    loading: true,\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { token, cancel } = CancelToken.source();\r\n\r\n    const options = {\r\n      cancelToken: token,\r\n      validateStatus: () => true,\r\n    };\r\n\r\n    const fetchPath = async ({ path, options }) => {\r\n      try {\r\n        const data = await get(`/${path}`, options);\r\n        setFetchData({\r\n          status: data.status,\r\n          data: data.data,\r\n          loading: false,\r\n          error: data.data.error,\r\n        });\r\n      } catch (err) {\r\n        setFetchData({\r\n          status: 500,\r\n          error: true,\r\n          loading: false,\r\n          data: err?.message,\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchPath({ path, options });\r\n\r\n    return () => {\r\n      cancel();\r\n    };\r\n  }, [path]);\r\n\r\n  return fetchData;\r\n}\r\n","import { memo } from \"react\";\r\n\r\nimport useFetch from \"../../../hooks/useFetch.js\";\r\n\r\nconst Quote = () => {\r\n  const { data, error, loading } = useFetch(\"quote/random\");\r\n\r\n  const { quote, author } = data?.data || {};\r\n\r\n  const toRender =\r\n    !error && quote ? (\r\n      <>\r\n        <blockquote>{quote}</blockquote>\r\n        <span className=\"animated\">- {author}</span>\r\n      </>\r\n    ) : (\r\n      <>\r\n        <blockquote>\r\n          There's a saying. If you want someone to love you forever, buy a dog,\r\n          feed it and keep it around.\r\n        </blockquote>\r\n        <span className=\"animated\">- Dick Dale, American Musician</span>\r\n      </>\r\n    );\r\n\r\n  const isLoading = loading ? <>Fetching</> : toRender;\r\n\r\n  return <div className=\"message\">{isLoading}</div>;\r\n};\r\n\r\nexport default memo(Quote);\r\n","import { useState } from \"react\";\r\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport Quote from \"../components/auth/Quote.jsx\";\r\nimport \"../../styles/auth.scss\";\r\n\r\nconst Auth = () => {\r\n  const location = useLocation();\r\n  const isSeller = location.pathname?.includes(\"seller\");\r\n  const method = location.pathname?.includes(\"login\");\r\n\r\n  const [onLogin, setOnLogin] = useState(\r\n    location.pathname?.includes(\"login\") ? true : false\r\n  );\r\n\r\n  const toLogin = (\r\n    <>\r\n      Already Have An Account? <span>Login From Here</span>\r\n    </>\r\n  );\r\n\r\n  const toSignup = (\r\n    <>\r\n      New to Buddy? <span>Register From Here</span>\r\n    </>\r\n  );\r\n\r\n  const path_to = `/auth${isSeller ? \"/seller_\" : \"/\"}${\r\n    onLogin ? \"register\" : \"login\"\r\n  }`;\r\n\r\n  const updateOnLogin = () => {\r\n    setOnLogin((p) => !p);\r\n  };\r\n\r\n  return (\r\n    <section className=\"auth\">\r\n      <div className=\"container\">\r\n        <div className=\"render\">\r\n          <Quote />\r\n          <Outlet isSeller={isSeller} method={method} />\r\n        </div>\r\n\r\n        <Link to={path_to} onClick={updateOnLogin} className=\"active_link\">\r\n          {location?.pathname?.includes(\"login\") ? toSignup : toLogin}\r\n        </Link>\r\n        <div className=\"anim\"></div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["useFetch","path","useState","status","data","loading","error","fetchData","setFetchData","useEffect","CancelToken","token","cancel","options","cancelToken","validateStatus","fetchPath","get","message","Quote","quote","author","toRender","className","isLoading","memo","location","useLocation","isSeller","pathname","includes","method","onLogin","setOnLogin","toLogin","toSignup","path_to","to","onClick","p"],"sourceRoot":""}