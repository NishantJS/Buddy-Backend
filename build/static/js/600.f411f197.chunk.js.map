{"version":3,"file":"static/js/600.f411f197.chunk.js","mappings":"yMAGe,SAASA,IAAqB,IAAZC,EAAW,uDAAJ,GACtC,GAAkCC,EAAAA,EAAAA,UAAS,CACzCC,OAAQ,IACRC,KAAM,KACNC,SAAS,EACTC,OAAO,IAJT,eAAOC,EAAP,KAAkBC,EAAlB,KAyCA,OAlCAC,EAAAA,EAAAA,YAAU,WACR,MAA0BC,EAAAA,YAAAA,SAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAETC,EAAU,CACdC,YAAaH,EACbI,eAAgB,kBAAM,IAGlBC,EAAS,mCAAG,gGAASf,EAAT,EAASA,KAAMY,EAAf,EAAeA,QAAf,mBAEKI,EAAAA,EAAAA,KAAI,IAAD,OAAKhB,GAAQY,GAFrB,OAERT,EAFQ,OAGdI,EAAa,CACXL,OAAQC,EAAKD,OACbC,KAAMA,EAAKA,KACXC,SAAS,EACTC,MAAOF,EAAKA,KAAKE,QAPL,gDAUdE,EAAa,CACXL,OAAQ,IACRG,OAAO,EACPD,SAAS,EACTD,KAAI,OAAC,EAAD,yBAAE,KAAKc,UAdC,yDAAH,sDAqBf,OAFAF,EAAU,CAAEf,KAAAA,EAAMY,QAAAA,IAEX,WACLD,OAED,CAACX,IAEGM,I,gICzCHY,EAAQ,WACZ,OAAwBnB,EAAAA,EAAAA,GAAS,gBAAzBI,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAEd,GAA8B,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMA,OAAQ,GAAhCgB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAYf,OATGf,GAASc,GACR,iBAAKE,UAAU,UAAf,WACE,gCAAaF,KACb,iCAASC,SAGX,yBAMN,GAAeE,EAAAA,EAAAA,MAAKJ,GCuCpB,EAxDa,SAAC,GAA0B,IAAD,IAAvBK,SAAAA,OAAuB,SAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BxB,EAAAA,EAAAA,UACN,gBAAtBuB,EAASE,UACe,gBAAtBF,EAASE,UACa,uBAAtBF,EAASE,UACa,wBAAtBF,EAASE,UAJb,eAAOC,EAAP,KAAgBC,EAAhB,KASMC,GACJ,6DAC2B,iDAIvBC,GACJ,kDACgB,oDAIZC,EAAUR,EACZI,EACE,wBACA,qBACFA,EACA,iBACA,cAMJ,OACE,oBAASN,UAAU,OAAnB,UACE,iBAAKA,UAAU,YAAf,WACE,iBAAKA,UAAU,SAAf,WACE,SAAC,EAAD,KACA,SAAC,KAAD,QAGF,SAAC,KAAD,CAAMW,GAAID,EAASE,QAZH,WACpBL,GAAW,SAACM,GAAD,OAAQA,MAW4Bb,UAAU,cAArD,SACyB,gBAAtBG,EAASE,UACY,uBAAtBF,EAASE,SACLI,EACAD,KAEN,gBAAKR,UAAU","sources":["hooks/useFetch.js","view/components/auth/Quote.jsx","view/pages/Auth.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { CancelToken, get } from \"axios\";\r\n\r\nexport default function useFetch(path = \"\") {\r\n  const [fetchData, setFetchData] = useState({\r\n    status: 102,\r\n    data: null,\r\n    loading: true,\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { token, cancel } = CancelToken.source();\r\n\r\n    const options = {\r\n      cancelToken: token,\r\n      validateStatus: () => true,\r\n    };\r\n\r\n    const fetchPath = async ({ path, options }) => {\r\n      try {\r\n        const data = await get(`/${path}`, options);\r\n        setFetchData({\r\n          status: data.status,\r\n          data: data.data,\r\n          loading: false,\r\n          error: data.data.error,\r\n        });\r\n      } catch (err) {\r\n        setFetchData({\r\n          status: 500,\r\n          error: true,\r\n          loading: false,\r\n          data: err?.message,\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchPath({ path, options });\r\n\r\n    return () => {\r\n      cancel();\r\n    };\r\n  }, [path]);\r\n\r\n  return fetchData;\r\n}\r\n","import { memo } from \"react\";\r\nimport useFetch from \"../../../hooks/useFetch.js\";\r\n// import axios from \"axios\";\r\n\r\nconst Quote = () => {\r\n  const { data, error } = useFetch(\"quote/random\");\r\n\r\n  const { quote, author } = data?.data || {};\r\n\r\n  const toRender =\r\n    !error && quote ? (\r\n      <div className=\"message\">\r\n        <blockquote>{quote}</blockquote>\r\n        <span>- {author}</span>\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    );\r\n\r\n  return toRender;\r\n};\r\n\r\nexport default memo(Quote);\r\n","import { useState } from \"react\";\r\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport Quote from \"../components/auth/Quote.jsx\";\r\nimport \"../../styles/auth.scss\";\r\n\r\nconst Auth = ({ isSeller = false }) => {\r\n  const location = useLocation();\r\n\r\n  const [onLogin, setOnLogin] = useState(\r\n    location.pathname === \"/auth/login\" ||\r\n      location.pathname === \"/auth/login\" ||\r\n      location.pathname === \"/auth/seller_login\" ||\r\n      location.pathname === \"/auth/seller_login/\"\r\n      ? true\r\n      : false\r\n  );\r\n\r\n  const toLogin = (\r\n    <>\r\n      Already Have An Account? <span>Login From Here</span>\r\n    </>\r\n  );\r\n\r\n  const toSignup = (\r\n    <>\r\n      New to Buddy? <span>Register From Here</span>\r\n    </>\r\n  );\r\n\r\n  const path_to = isSeller\r\n    ? onLogin\r\n      ? \"/auth/seller_register\"\r\n      : \"/auth/seller_login\"\r\n    : onLogin\r\n    ? \"/auth/register\"\r\n    : \"/auth/login\";\r\n\r\n  const updateOnLogin = () => {\r\n    setOnLogin((p) => !p);\r\n  };\r\n\r\n  return (\r\n    <section className=\"auth\">\r\n      <div className=\"container\">\r\n        <div className=\"render\">\r\n          <Quote />\r\n          <Outlet />\r\n        </div>\r\n\r\n        <Link to={path_to} onClick={updateOnLogin} className=\"active_link\">\r\n          {location.pathname === \"/auth/login\" ||\r\n          location.pathname === \"/auth/seller_login\"\r\n            ? toSignup\r\n            : toLogin}\r\n        </Link>\r\n        <div className=\"anim\"></div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["useFetch","path","useState","status","data","loading","error","fetchData","setFetchData","useEffect","CancelToken","token","cancel","options","cancelToken","validateStatus","fetchPath","get","message","Quote","quote","author","className","memo","isSeller","location","useLocation","pathname","onLogin","setOnLogin","toLogin","toSignup","path_to","to","onClick","p"],"sourceRoot":""}