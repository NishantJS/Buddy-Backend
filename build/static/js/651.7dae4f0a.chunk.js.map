{"version":3,"file":"static/js/651.7dae4f0a.chunk.js","mappings":"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","sources":["view/components/productForm/Description.jsx","view/components/productForm/Switcher.jsx","view/components/productForm/Meta.jsx","view/components/productForm/ImageProgress.jsx","view/components/productForm/ImageList.jsx","icons/Upload.jsx","view/components/productForm/DropImage.jsx","view/components/productForm/Images.jsx","view/components/productForm/Review.jsx","view/components/productForm/Stepper.jsx","view/components/ProductFormContainer.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Description = () => {\r\n  return (\r\n    <img src={\"/images/6252de227f25c4c2eaf73b91/product_title0\"} alt=\"hello\" />\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\n\r\nconst Switcher = ({\r\n  prevStep = false,\r\n  nextStep = false,\r\n  handleSubmit = false,\r\n}) => {\r\n  return (\r\n    <div className=\"switcher\">\r\n      {prevStep && <button onClick={prevStep}>Previous Step</button>}\r\n      {nextStep && <button onClick={nextStep}>Next Step</button>}\r\n      {handleSubmit && (\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          Submit\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Switcher;\r\n","import React from \"react\";\r\nimport Switcher from \"./Switcher\";\r\n\r\nconst Meta = ({ updateTitle, nextStep, step }) => {\r\n  return (\r\n    <>\r\n      <label>\r\n        <input type=\"text\" />\r\n      </label>\r\n      <Switcher nextStep={nextStep} step={step} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Meta;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst ImageProgress = ({ image, upload = false, index, removeHandler }) => {\r\n  const [uploading] = useState(() => upload);\r\n  const imageURL = image?.name ? URL.createObjectURL(image) : false;\r\n\r\n  const dragRef = useRef(null);\r\n  useEffect(() => {\r\n    const dragElement = dragRef.current;\r\n    if (!dragElement) return;\r\n\r\n    const addClass = () => dragElement?.classList.add(\"dragging\");\r\n    const removeClass = () => dragElement?.classList.remove(\"dragging\");\r\n\r\n    dragElement?.addEventListener(\"dragstart\", addClass);\r\n    dragElement?.addEventListener(\"dragend\", removeClass);\r\n\r\n    return () => {\r\n      dragElement?.removeEventListener(\"dragstart\", addClass);\r\n      dragElement?.removeEventListener(\"dragend\", removeClass);\r\n\r\n      imageURL && URL.revokeObjectURL(imageURL);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <li draggable={true} ref={dragRef} className=\"draggable\" data-index={index}>\r\n      <img src={imageURL} alt={image[\"name\"]} width={150} height={100} />\r\n      <div className=\"content\">\r\n        <span className=\"name\" title={image?.name}>\r\n          {image?.name}\r\n        </span>\r\n        {uploading && <span>Uploading</span>}\r\n        {uploading ? (\r\n          <div className=\"progress-bar\">\r\n            <progress value={20} max={100}></progress>\r\n          </div>\r\n        ) : (\r\n          <div className=\"size_and_remove\">\r\n            <span className=\"size\">\r\n              {Intl.NumberFormat(\"en\", {\r\n                style: \"unit\",\r\n                unit: \"kilobyte\",\r\n                notation: \"compact\",\r\n              }).format(image?.size / 1024)}\r\n            </span>\r\n            <span onClick={() => removeHandler(index)}>Remove</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageProgress;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport ImageProgress from \"./ImageProgress.jsx\";\r\n\r\nconst ImageList = ({ images, removeImage, moveImages }) => {\r\n  const dragRef = useRef(null);\r\n  useEffect(() => {\r\n    const dragContainer = dragRef.current;\r\n    if (!dragContainer) return;\r\n    let dragged;\r\n\r\n    const reorderImages = (event) => {\r\n      //? preventDefault to remove cursor icon only on container\r\n      event?.preventDefault();\r\n      const draggedIndex = dragged?.dataset.index;\r\n      const getAfterElement = (Y) => {\r\n        //? get All childrens except selected one\r\n        const draggableElements = [\r\n          ...dragContainer.querySelectorAll(\".draggable:not(.dragging)\"),\r\n        ];\r\n\r\n        return draggableElements?.reduce(\r\n          (closest, child) => {\r\n            const box = child.getBoundingClientRect();\r\n            const offset = Y - box.top - box.height / 2;\r\n            if (offset < 0 && offset > closest.offset) {\r\n              return { offset, element: child };\r\n            }\r\n            return closest;\r\n          },\r\n          { offset: Number.NEGATIVE_INFINITY }\r\n        )?.element;\r\n      };\r\n      const afterElement = getAfterElement(event.clientY);\r\n      const index = afterElement?.dataset.index;\r\n      if (!draggedIndex || !index || draggedIndex === index) return;\r\n      moveImages(images, index, draggedIndex);\r\n    };\r\n    const getDraggingElement = () =>\r\n      (dragged = dragContainer.getElementsByClassName(\"dragging\")[0]);\r\n    dragContainer?.addEventListener(\"dragstart\", getDraggingElement);\r\n    dragContainer?.addEventListener(\"dragend\", reorderImages);\r\n    return () => {\r\n      dragContainer?.removeEventListener(\"dragstart\", getDraggingElement);\r\n      dragContainer?.removeEventListener(\"dragend\", reorderImages);\r\n    };\r\n  }, [images, moveImages]);\r\n  return (\r\n    <div className=\"uploaded-area\">\r\n      <ol ref={dragRef}>\r\n        {images.map((image, index) => (\r\n          <ImageProgress\r\n            image={image}\r\n            key={image?.name}\r\n            removeHandler={removeImage}\r\n            index={index}\r\n          />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageList;\r\n","import { memo } from \"react\";\r\n\r\nconst SvgComponent = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M18.42 8.22a7 7 0 0 0-13.36 1.89A4 4 0 0 0 6 18a1 1 0 0 0 0-2 2 2 0 0 1 0-4 1 1 0 0 0 1-1 5 5 0 0 1 9.73-1.61 1 1 0 0 0 .78.67 3 3 0 0 1 .24 5.84 1 1 0 0 0 .5 1.94 5 5 0 0 0 .17-9.62zm-5.71 2.07a1 1 0 0 0-.33-.21 1 1 0 0 0-.76 0 1 1 0 0 0-.33.21l-3 3a1 1 0 0 0 1.42 1.42l1.29-1.3V19a1 1 0 0 0 2 0v-5.59l1.29 1.3a1 1 0 1 0 1.42-1.42z\" />\r\n  </svg>\r\n);\r\n\r\nconst Memo = memo(SvgComponent);\r\nexport default Memo;\r\n","import Upload from \"../../../icons/Upload.jsx\";\r\n\r\nconst DropImage = ({ images, addMessage, updateImages }) => {\r\n  const getImageData = (event) => {\r\n    event?.preventDefault();\r\n    const alreadyAdded = (file) => {\r\n      return images.some(\r\n        (image) => image.name === file.name && image.size === file.size\r\n      );\r\n    };\r\n\r\n    const dataTransfer = event.dataTransfer || false;\r\n    const targetFiles = dataTransfer ? dataTransfer.files : event.target.files;\r\n    let length = targetFiles.length;\r\n    if (length + images.length > 5) {\r\n      length = 5;\r\n      addMessage(\"Image limit exceeds! Please select less than 5 Images!\");\r\n    }\r\n    const files = [];\r\n    for (let i = 0; i < length; i++) {\r\n      if (targetFiles[i].type !== \"image/png\")\r\n        addMessage(\r\n          \"Unsupported file type! Please only use PNG transparent images\"\r\n        );\r\n      else if (alreadyAdded(targetFiles[i])) addMessage(\"Image already Added\");\r\n      else files.push(targetFiles[i]);\r\n    }\r\n    if (files) updateImages(files);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"image_form\"\r\n      onDragOver={(event) => event?.preventDefault()}\r\n      onDrop={getImageData}\r\n    >\r\n      <label htmlFor=\"images_input\">\r\n        <Upload />\r\n        <h3>Browse files to upload or drag here</h3>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"images_input\"\r\n        onChange={getImageData}\r\n        accept=\".png\"\r\n        multiple\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DropImage;\r\n","import { useState } from \"react\";\r\nimport \"../../../styles/image_upload.scss\";\r\nimport { addToast } from \"../../services/actions/toast.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ImageList from \"./ImageList.jsx\";\r\nimport Switcher from \"./Switcher.jsx\";\r\nimport DropImage from \"./DropImage\";\r\n\r\nconst Images = ({ prevStep, nextStep, title = false }) => {\r\n  const [images, setImages] = useState(() => []);\r\n\r\n  const dispatch = useDispatch();\r\n  const addMessage = (message = \"\", color = \"danger\") => {\r\n    dispatch(\r\n      addToast({\r\n        message,\r\n        color,\r\n      })\r\n    );\r\n  };\r\n  const removeImage = (index) => {\r\n    setImages((prev) => prev.filter((_, prev_index) => prev_index !== index));\r\n  };\r\n\r\n  const updateImages = (files) => {\r\n    setImages((prev) => [...prev, ...files]);\r\n  };\r\n\r\n  const moveImages = (arr = [], index, draggedIndex) => {\r\n    const middleElement = images[draggedIndex];\r\n    setImages(() => {\r\n      let array = [...arr];\r\n      array.splice(draggedIndex, 1);\r\n      return [...array.slice(0, index), middleElement, ...array.slice(index)];\r\n    });\r\n  };\r\n\r\n  const uploadImages = async () => {\r\n    try {\r\n      // if (!title) return prevStep();\r\n      const formData = new FormData();\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n        validateStatus: () => true,\r\n        onUploadProgress: (progressEvent) =>\r\n          console.log(\r\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n          ),\r\n      };\r\n\r\n      images.forEach((image) => formData.append(\"product_image\", image));\r\n      const { data } = await axios.post(\r\n        `/seller/upload/${title}`,\r\n        formData,\r\n        config\r\n      );\r\n      if (data.error) throw new Error(data.data);\r\n      addMessage(data.data);\r\n      nextStep();\r\n    } catch (error) {\r\n      addMessage(error?.message || \"File upload failed! Please try again!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <DropImage\r\n          images={images}\r\n          addMessage={addMessage}\r\n          updateImages={updateImages}\r\n        />\r\n        <ImageList\r\n          images={images}\r\n          removeImage={removeImage}\r\n          moveImages={moveImages}\r\n        />\r\n      </div>\r\n      <Switcher prevStep={prevStep} nextStep={uploadImages} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Images;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport Upload from \"../../../icons/Upload.jsx\";\r\nimport \"../../../styles/image_upload.scss\";\r\nimport { addToast } from \"../../services/actions/toast.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ImageList from \"./ImageList.jsx\";\r\n\r\nconst Review = () => {\r\n  const [images, setImages] = useState(() => []);\r\n  const title = \"product_title \";\r\n  const dragRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const removeImage = (index) => {\r\n    setImages((prev) => prev.filter((_, prev_index) => prev_index !== index));\r\n  };\r\n\r\n  const uploadImages = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n        validateStatus: () => true,\r\n        onUploadProgress: (progressEvent) =>\r\n          console.log(\r\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n          ),\r\n      };\r\n\r\n      images.forEach((image) => formData.append(\"product_image\", image));\r\n      const { data } = await axios.post(\r\n        `/seller/upload/${title}`,\r\n        formData,\r\n        config\r\n      );\r\n      if (data.error) throw new Error(data.data);\r\n      dispatch(addToast({ message: data.data }));\r\n    } catch (error) {\r\n      dispatch(\r\n        addToast({\r\n          message: error?.message || \"File upload failed! Please try again!\",\r\n          color: \"danger\",\r\n        })\r\n      );\r\n    } finally {\r\n      setImages(() => []);\r\n    }\r\n  };\r\n\r\n  const getImageData = (event) => {\r\n    const alreadyAdded = (file) => {\r\n      return images.some(\r\n        (image) => image.name === file.name && image.size === file.size\r\n      );\r\n    };\r\n\r\n    const addMessage = (message = \"\", color = \"danger\") => {\r\n      dispatch(\r\n        addToast({\r\n          message,\r\n          color,\r\n        })\r\n      );\r\n    };\r\n\r\n    const targetFiles = event.target.files;\r\n    let length = targetFiles.length;\r\n    if (length + images.length > 5) {\r\n      length = 5;\r\n      addMessage(\"Image limit exceeds! Please select less than 5 Images!\");\r\n    }\r\n    const files = [];\r\n    for (let i = 0; i < length; i++) {\r\n      if (targetFiles[i].type !== \"image/png\")\r\n        addMessage(\r\n          \"Unsupported file type! Please only use PNG transparent images\"\r\n        );\r\n      else if (alreadyAdded(targetFiles[i])) addMessage(\"Image already Added\");\r\n      else files.push(targetFiles[i]);\r\n    }\r\n    if (files) {\r\n      setImages((prev) => [...prev, ...files]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const dragContainer = dragRef.current;\r\n    if (!dragContainer) return;\r\n    let dragged;\r\n    const swapImages = (arr, index, draggedIndex) => {\r\n      const middleElement = images[draggedIndex];\r\n      setImages(() => {\r\n        let array = [...arr];\r\n        array.splice(draggedIndex, 1);\r\n        return [...array.slice(0, index), middleElement, ...array.slice(index)];\r\n      });\r\n    };\r\n    const reorderImages = (event) => {\r\n      //? preventDefault to remove cursor icon only on container\r\n      event?.preventDefault();\r\n      const draggedIndex = dragged?.dataset.index;\r\n      const getAfterElement = (Y) => {\r\n        //? get All childrens except selected one\r\n        const draggableElements = [\r\n          ...dragContainer.querySelectorAll(\".draggable:not(.dragging)\"),\r\n        ];\r\n\r\n        return draggableElements?.reduce(\r\n          (closest, child) => {\r\n            const box = child.getBoundingClientRect();\r\n            const offset = Y - box.top - box.height / 2;\r\n            if (offset < 0 && offset > closest.offset) {\r\n              return { offset, element: child };\r\n            }\r\n            return closest;\r\n          },\r\n          { offset: Number.NEGATIVE_INFINITY }\r\n        )?.element;\r\n      };\r\n      const afterElement = getAfterElement(event.clientY);\r\n      const index = afterElement?.dataset.index;\r\n      if (!draggedIndex || !index || draggedIndex === index) return;\r\n      swapImages(images, index, draggedIndex);\r\n    };\r\n    const getDraggingElement = () =>\r\n      (dragged = dragContainer.getElementsByClassName(\"dragging\")[0]);\r\n    dragContainer?.addEventListener(\"dragstart\", getDraggingElement);\r\n    dragContainer?.addEventListener(\"dragend\", reorderImages);\r\n    return () => {\r\n      dragContainer?.removeEventListener(\"dragstart\", getDraggingElement);\r\n      dragContainer?.removeEventListener(\"dragend\", reorderImages);\r\n    };\r\n  }, [images]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <form className=\"image_form\" draggable={true}>\r\n        <label htmlFor=\"images_input\">\r\n          <Upload />\r\n          <h3>Browse files to upload or drag here</h3>\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"images_input\"\r\n          onChange={getImageData}\r\n          accept=\".png\"\r\n          multiple\r\n        />\r\n      </form>\r\n      <ImageList\r\n        images={images}\r\n        dragRef={dragRef}\r\n        title={title}\r\n        removeImage={removeImage}\r\n      />\r\n      <input type=\"submit\" value=\"submit\" onClick={uploadImages} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React from \"react\";\r\nimport \"../../../styles/stepper.scss\";\r\n\r\nconst Stepper = ({ step = 0 }) => {\r\n  const items = [\"Meta\", \"Images\", \"Description\", \"Review\"];\r\n\r\n  return (\r\n    <ol className=\"stepper\">\r\n      {items.map((item, index) => {\r\n        return (\r\n          <li\r\n            className={`stepper__item ${step > index ? \"visited\" : \"\"} ${\r\n              step === index ? \"current\" : \"\"\r\n            }`}\r\n            data-index={index + 1}\r\n            key={item}\r\n          >\r\n            <h6 className=\"stepper__title\">{item}</h6>\r\n          </li>\r\n        );\r\n      })}\r\n    </ol>\r\n  );\r\n};\r\n\r\nexport default Stepper;\r\n","import { useState } from \"react\";\r\nimport \"../../styles/product.form.scss\";\r\nimport Description from \"./productForm/Description\";\r\nimport Meta from \"./productForm/Meta.jsx\";\r\nimport Images from \"./productForm/Images.jsx\";\r\nimport Review from \"./productForm/Review\";\r\nimport Stepper from \"./productForm/Stepper\";\r\n\r\nconst FormSwitch = ({ step, nextStep, prevStep }) => {\r\n  const [title, setTitle] = useState(() => false);\r\n\r\n  const updateTitle = (newTitle = false) => {\r\n    setTitle(() => newTitle);\r\n  };\r\n\r\n  switch (step) {\r\n    case 0:\r\n      return <Meta updateTitle={updateTitle} nextStep={nextStep} />;\r\n    case 1:\r\n      return <Images prevStep={prevStep} nextStep={nextStep} title={title} />;\r\n    case 2:\r\n      return <Description prevStep={prevStep} nextStep={nextStep} />;\r\n    case 3:\r\n      return <Review title={title} prevStep={prevStep} />;\r\n\r\n    default:\r\n      return <Meta updateTitle={updateTitle} nextStep={nextStep} />;\r\n  }\r\n};\r\n\r\nconst ProductFormContainer = () => {\r\n  const [step, setStep] = useState(() => 1);\r\n\r\n  const prevStep = () => {\r\n    if (step <= 0) return;\r\n    setStep((p) => p - 1);\r\n  };\r\n\r\n  const nextStep = () => {\r\n    if (step >= 3) return;\r\n    setStep((p) => p + 1);\r\n  };\r\n\r\n  return (\r\n    <section className=\"product_form\">\r\n      <Stepper step={step} />\r\n      <FormSwitch prevStep={prevStep} nextStep={nextStep} step={step} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProductFormContainer;\r\n"],"names":["src","alt","prevStep","nextStep","handleSubmit","className","onClick","type","updateTitle","step","image","upload","index","removeHandler","useState","uploading","imageURL","name","URL","createObjectURL","dragRef","useRef","useEffect","dragElement","current","addClass","classList","add","removeClass","remove","addEventListener","removeEventListener","revokeObjectURL","draggable","ref","width","height","title","value","max","Intl","NumberFormat","style","unit","notation","format","size","images","removeImage","moveImages","dragContainer","dragged","reorderImages","event","preventDefault","draggedIndex","dataset","afterElement","Y","draggableElements","querySelectorAll","reduce","closest","child","box","getBoundingClientRect","offset","top","element","Number","NEGATIVE_INFINITY","getAfterElement","clientY","getDraggingElement","getElementsByClassName","map","SvgComponent","xmlns","viewBox","d","memo","addMessage","updateImages","getImageData","alreadyAdded","file","some","dataTransfer","targetFiles","files","target","length","i","push","onDragOver","onDrop","htmlFor","Upload","id","onChange","accept","multiple","setImages","dispatch","useDispatch","message","color","addToast","uploadImages","formData","FormData","config","headers","validateStatus","onUploadProgress","progressEvent","console","log","Math","round","loaded","total","forEach","append","axios","data","error","Error","prev","filter","_","prev_index","arr","middleElement","array","splice","slice","swapImages","item","FormSwitch","setTitle","newTitle","setStep","p"],"sourceRoot":""}